plugins {
    id 'java'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '+'
    id 'xyz.jpenilla.run-paper' version '+'
    id 'org.springframework.boot' version '+'
    id 'io.spring.dependency-management' version '+'
    id 'checkstyle'
    id 'jacoco'
}

group = 'com.carinaschoppe'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {

    //spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    //protocollib
    compileOnly 'com.comphenix.protocol:ProtocolLib:+'


    //junit
    testImplementation 'org.junit.jupiter:junit-jupiter-api:+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:+'
    //gson
    implementation("com.google.code.gson:gson:+")

    //lombok
    compileOnly 'org.projectlombok:lombok:+'
    annotationProcessor 'org.projectlombok:lombok:+'

    testCompileOnly 'org.projectlombok:lombok:+'
    testAnnotationProcessor 'org.projectlombok:lombok:+'


    //mockito
    testImplementation 'org.mockito:mockito-core:+'

    //paper
    compileOnly("io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT")

    //sqlite
    implementation("org.xerial:sqlite-jdbc:+")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
test {
    useJUnitPlatform()
}
runServer {
    minecraftVersion("1.21.1")
}